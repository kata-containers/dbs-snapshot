name: BVT
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
env:
  RUST_VERSION: 1.84.0
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, ppc64le, riscv64]
    steps:
      - uses: actions/checkout@v2
      - run: rustup install ${{ env.RUST_VERSION }} && rustup default ${{ env.RUST_VERSION }}
      - run: make debug
  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup install ${{ env.RUST_VERSION }} && rustup default ${{ env.RUST_VERSION }}
      - run: rustup component add rustfmt
      - run: make fmt
  clippy:
    name: Clippy Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, ppc64le, riscv64]
    steps:
      - uses: actions/checkout@v2
      - run: rustup install ${{ env.RUST_VERSION }} && rustup default ${{ env.RUST_VERSION }}
      - run: rustup component add clippy
      - run: make clippy
  test:
    name: Run Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, ppc64le, riscv64]
    steps:
      - uses: actions/checkout@v2
      - run: rustup install ${{ env.RUST_VERSION }} && rustup default ${{ env.RUST_VERSION }}
      - run: make test
  bench:
    name: Run Benchmark Test
    strategy:
      matrix:
        arch: [amd64, arm64, ppc64le, riscv64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup install ${{ env.RUST_VERSION }} && rustup default ${{ env.RUST_VERSION }}
      - run: make bench
